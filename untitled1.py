# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pSkWBshXo2h3U02uSJw_cd3fi-qYiyzK
"""

!pip install google-cloud-language pandas beautifulsoup4 openai

import requests
import pandas as pd
from datetime import datetime
from google.cloud import language_v1
from google.oauth2 import service_account
from bs4 import BeautifulSoup

from google.colab import userdata

from IPython.display import display
from IPython.display import Markdown
import pathlib
import textwrap

import google.generativeai as genai
GOOGLE_API_KEY=userdata.get('scoyt')

genai.configure(api_key=GOOGLE_API_KEY)

for m in genai.list_models():
  if 'generateContent' in m.supported_generation_methods:
    print(m.name)

model = genai.GenerativeModel('gemini-pro')
#model_name = "models/gemini-pro"

player_name = 'Jamal'
url = 'https://fbref.com/en/players/2c0558b8/Jamal-Musiala'
attrs = 'scout_summary_AM'

response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

# Extract player information
df = pd.read_html(url, attrs={'id': attrs})[0]
position = soup.select_one('p:-soup-contains("Position")').text.split(':')[-2].split(' ')[0].strip()
birthday = soup.select_one('span[id="necro-birth"]').text.strip()
age = (datetime.now() - datetime.strptime(birthday, '%B %d, %Y')).days // 365
team = soup.select_one('p:-soup-contains("Club")').text.split(':')[-1].strip()
df = df.dropna(subset=['Statistic'])

prompt = f"""
I need you to create a scouting report on {player_name}. Can you provide me with a summary of their strengths and weaknesses?

Here is the data I have on him:

Player: {player_name}
Position: {position}
Age: {age}
Team: {team}

{df.to_markdown()}

Return the scouting report in the following markdown format:

# Scouting Report for {player_name}

## Strengths
< a list of 1 to 3 strengths >

## Weaknesses
< a list of 1 to 3 weaknesses >

## Summary
< a brief summary of the player's overall performance and if he would be beneficial to the team >
"""

#response = genai.generate_text(model=model_name, prompt=prompt)
generated_response = model.generate_content(contents=prompt)
generated_text = generated_response.text
scouting_report = generated_text.strip()
#scouting_report = generated_response['choices'][0]['text'].strip()

print(scouting_report)

def to_markdown(text):
  text = text.replace('â€¢', '  *')
  return Markdown(textwrap.indent(text, '> ', predicate=lambda _: True))
to_markdown(scouting_report)